plugins {
	id 'org.springframework.boot' version '2.7.3'
	id 'io.spring.dependency-management' version '1.0.13.RELEASE'
	id 'java'
	id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '3.0.7'
	implementation group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-java8time'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	// QueryDSL 추가
	// QueryDSL JPA : 실제 애플리케이션 코드를 작성할 때 필요함
	implementation "com.querydsl:querydsl-jpa:5.0.0"

	// QueryDSL 추가
	// QueryDSL APT : 코드 제네레이션 -> QHello 만들어주는 라이브러리
	implementation "com.querydsl:querydsl-apt:5.0.0"
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl Setting Start
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
	jpa = true
	querydslSourcesDir = querydslDir
}
sourceSets {
	main.java.srcDir querydslDir
}
compileQuerydsl{
	options.annotationProcessorPath = configurations.querydsl
}
configurations {
	querydsl.extendsFrom compileClasspath
}
// Querydsl Setting End